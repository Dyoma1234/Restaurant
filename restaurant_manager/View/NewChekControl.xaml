<UserControl x:Class="restaurant_manager.NewChekControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:restaurant_manager"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
     TextElement.Foreground="{DynamicResource MaterialDesignBody}"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="13"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
     Background="{DynamicResource MaterialDesignPaper}"
     FontFamily="{DynamicResource MaterialDesignFont}" 
     Name="Mwnd"
     mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">

    <Grid Margin="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="0.4*"/>

        </Grid.RowDefinitions>
        <Grid Background="#FF2196F3">
            <TextBlock Margin="15,0" Text="Новый чек"  

                FontWeight="Bold" TextTrimming="CharacterEllipsis" 

                LineHeight="22" FontSize="24" 

                VerticalAlignment="Center" Foreground="White"/>
        </Grid>
        <Grid Grid.Column="1" Background="#FF2196F3">
            <TextBlock Margin="15,0" Text="Меню"  

                FontWeight="Bold" TextTrimming="CharacterEllipsis" 

                LineHeight="22" FontSize="24" 

                VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Left"/>

        </Grid>

        <DataGrid
            Grid.Column="0" Grid.Row="1"  Grid.RowSpan="2"
            x:Name="Check"
  Margin="0 8 0 0"
  ItemsSource="{Binding CheckMenuList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
  SelectedItem="{Binding CheckSelectedItem,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
  SelectionMode="Single"
  CanUserSortColumns="True"
  CanUserAddRows="False"
  IsReadOnly="True"
  AutoGenerateColumns="False"
  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
  materialDesign:DataGridAssist.ColumnHeaderPadding="8">

            <DataGrid.Columns>
                
               <materialDesign:MaterialDataGridTextColumn
                   Width="*"
                             IsReadOnly="{Binding EditMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Binding="{Binding Name , UpdateSourceTrigger=PropertyChanged}"
                             Header="Название"
                             MaxLength="50"
                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
                              
                             IsReadOnly="{Binding EditMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Binding="{Binding Price , UpdateSourceTrigger=PropertyChanged}"
                             Header="Цена"
                             MaxLength="50"
                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">

                </materialDesign:MaterialDataGridTextColumn>
                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="RowEditEnding">
                    <i:InvokeCommandAction Command="{Binding EndEdit}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Убрать" Command="{Binding EraseDishFromCheck}"></MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>

        <DataGrid
            x:Name="Menu"
            Grid.Column="2" Grid.Row="1"  Grid.RowSpan="2"
  Margin="0,8,6,0"
  ItemsSource="{Binding MenuList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
  SelectedItem="{Binding SelectedMenuDish,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
  SelectionMode="Single"
  CanUserSortColumns="True"
  CanUserAddRows="False"
  IsReadOnly="True"
  AutoGenerateColumns="False"
  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
  materialDesign:DataGridAssist.ColumnHeaderPadding="8">

            <DataGrid.Columns>
                
                 <materialDesign:MaterialDataGridTextColumn
                     Width="*"
                             Binding="{Binding Name , UpdateSourceTrigger=PropertyChanged}"
                             Header="Название"
                             MaxLength="50"
                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
                    Width="*"
                            materialDesign:DataGridAssist.EnableEditBoxAssist="{Binding EditMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Header="Категория"
                 Binding="{Binding Dishes_categories.Name , UpdateSourceTrigger=PropertyChanged}"
                     />
                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:MaterialDataGridTextColumn
                             Binding="{Binding Price , UpdateSourceTrigger=PropertyChanged}"
                             Header="Цена"
                             MaxLength="50"
                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">

                </materialDesign:MaterialDataGridTextColumn>
                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding AddDishToCheckCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </DataGrid>
        <Grid Grid.Row="3" Background="#FF2196F3">
            <TextBlock Margin="15,0" Text="Сумма:"  

                FontWeight="Bold" TextTrimming="CharacterEllipsis" 

                LineHeight="22" FontSize="16" 

                VerticalAlignment="Center" Foreground="White"/>
            <TextBlock Margin="50,0" Text="{Binding Sum ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  

                FontWeight="Bold" TextTrimming="CharacterEllipsis" 

                LineHeight="22" FontSize="16" 

                VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Right"/>
            
        </Grid>
        <Grid Grid.Row="3" Grid.Column="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.ColumnSpan="2" Text="{Binding SearchStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="40"   materialDesign:HintAssist.Hint="Поиск" materialDesign:HintAssist.IsFloating="True"  materialDesign:HintAssist.HintOpacity="0.4" Margin="20,0" VerticalAlignment="Center" />
                <Button Grid.Column="2" HorizontalAlignment="Center" Height="Auto" Margin="0" Command="{Binding ClearCurCheck}">Сбросить</Button>
                <Button Grid.Column="3" HorizontalAlignment="Center" Margin="3,0,0,-1" Height="Auto">Добавить</Button>

            </Grid>
            
          
        </Grid>
    </Grid>
</UserControl>
